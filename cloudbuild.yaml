steps:
  # Step 0: Generate version tag
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Generate Version'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        VERSION_TAG="v-$(date +%Y%m%d-%H%M%S)"
        echo "VERSION_TAG=$$VERSION_TAG" > /workspace/version.env
        echo "Generated version: $$VERSION_TAG"

  # Step 1: Package Multiple Flask App Instances
  - name: 'python:3.10-slim'
    id: 'Package Multiple Flask Apps'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y zip
        source /workspace/version.env

        for i in 1 2 3 4; do
          DIR="package_$$i"
          mkdir -p $$DIR

          echo "from flask import Flask" > $$DIR/app.py
          echo "import utils" >> $$DIR/app.py
          echo "app = Flask(__name__)" >> $$DIR/app.py
          echo "" >> $$DIR/app.py
          echo "@app.route('/')" >> $$DIR/app.py
          echo "def hello():" >> $$DIR/app.py
          echo "    return f'Hello from version $${VERSION_TAG} - Instance $$i - ' + utils.greet()" >> $$DIR/app.py
          echo "" >> $$DIR/app.py
          echo "if __name__ == '__main__':" >> $$DIR/app.py
          echo "    app.run(host='0.0.0.0', port=8080)" >> $$DIR/app.py

          echo "def greet():" > $$DIR/utils.py
          echo "    return 'Greetings from utils!'" >> $$DIR/utils.py

          echo "environment: production" > $$DIR/config.yaml
          echo "version: $${VERSION_TAG}" >> $$DIR/config.yaml

          echo "# Flask App Instance $$i" > $$DIR/README.md
          echo "This is version $${VERSION_TAG} of instance $$i." >> $$DIR/README.md

          touch $$DIR/__init__.py

          zip -r python-app-$${VERSION_TAG}-$$i.nupkg $$DIR
        done

  # Step 2: Ensure Artifact Registry Exists
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe generic-nupkg-repo --location=us-central1 --project=onyx-antler-459216-j6; then
          gcloud artifacts repositories create generic-nupkg-repo \
            --repository-format=generic \
            --location=us-central1 \
            --project=onyx-antler-459216-j6
        fi

  # Step 3: Upload All .nupkg Files to Artifact Registry
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Upload Multiple .nupkg Files"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        source /workspace/version.env

        echo "Uploading all .nupkg files with version tag: $$VERSION_TAG"

        for FILE in python-app-$${VERSION_TAG}-*.nupkg; do
          echo "Uploading $$FILE to Artifact Registry..."
          gcloud artifacts generic upload \
            --project="onyx-antler-459216-j6" \
            --location="us-central1" \
            --repository="generic-nupkg-repo" \
            --package="source-package" \
            --version="$${VERSION_TAG}" \
            --source="$$FILE"
        done


options:
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
