steps:
  # Step 0: Generate version tag
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Generate Version'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        VERSION_TAG="v-$(date +%Y%m%d-%H%M%S)"
        echo "VERSION_TAG=$$VERSION_TAG" > /workspace/version.env
        echo "Generated version: $$VERSION_TAG"

  # Step 1: Create separate .nupkg files with specific content
  - name: 'python:3.10-slim'
    id: 'Create Distinct .nupkg Files'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y zip
        source /workspace/version.env

        # app.nupkg
        mkdir -p app_dir
        echo "from flask import Flask" > app_dir/app.py
        echo "app = Flask(__name__)" >> app_dir/app.py
        echo "@app.route('/')" >> app_dir/app.py
        echo "def hello():" >> app_dir/app.py
        echo "    return 'Hello from app'" >> app_dir/app.py
        echo "if __name__ == '__main__':" >> app_dir/app.py
        echo "    app.run(host='0.0.0.0', port=8080)" >> app_dir/app.py
        zip -r app.nupkg app_dir

        # config.nupkg
        mkdir -p config_dir
        echo "environment: production" > config_dir/config.yaml
        echo "version: $${VERSION_TAG}" >> config_dir/config.yaml
        zip -r config.nupkg config_dir

        # utils.nupkg
        mkdir -p utils_dir
        echo "def greet():" > utils_dir/utils.py
        echo "    return 'Greetings from utils!'" >> utils_dir/utils.py
        zip -r utils.nupkg utils_dir

        # readme.nupkg
        mkdir -p readme_dir
        echo "# Flask App Package" > readme_dir/README.md
        echo "This is version $${VERSION_TAG}." >> readme_dir/README.md
        zip -r readme.nupkg readme_dir

  # Step 2: Ensure Artifact Registry Exists
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe generic-nupkg-repo --location=us-central1 --project=onyx-antler-459216-j6; then
          gcloud artifacts repositories create generic-nupkg-repo \
            --repository-format=generic \
            --location=us-central1 \
            --project=onyx-antler-459216-j6
        fi

  # Step 3: Upload .nupkg files to Artifact Registry
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Upload to Artifact Registry'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        source /workspace/version.env

        declare -A PACKAGES=(
          ["app"]="app.nupkg"
          ["config"]="config.nupkg"
          ["utils"]="utils.nupkg"
          ["readme"]="readme.nupkg"
        )

        for pkg in "${!PACKAGES[@]}"; do
          FILE="${PACKAGES[$pkg]}"
          echo "Uploading $$FILE to package '$$pkg' with version $$VERSION_TAG"
          gcloud artifacts generic upload \
            --project="onyx-antler-459216-j6" \
            --location="us-central1" \
            --repository="generic-nupkg-repo" \
            --package="$$pkg" \
            --version="$$VERSION_TAG" \
            --source="$$FILE"
        done

options:
  logging: CLOUD_LOGGING_ONLY
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
